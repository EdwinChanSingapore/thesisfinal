\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{\PYGZsh{}This script takes in a VCF file with functional annotation already done, and computes the bayesian network using the annotations. It produces a sorted list of vcf entries in a text file, with accompanying annotation scores}
\PYG{c+c1}{\PYGZsh{}Input : VCF file with functional annotation}
\PYG{c+c1}{\PYGZsh{}Output : A sorted list of vcf entries with accompanying annotation scores, redirected from stdout to a file}
\PYG{c+c1}{\PYGZsh{}Overall Strategy :}
\PYG{c+c1}{\PYGZsh{}First extract all the features from the vcf files and then perform feature\PYGZhy{}wise normalisation.}
\PYG{c+c1}{\PYGZsh{}Subsequently, prepare the bayesian network by creating edges, nodes, preparing prior distritions}
\PYG{c+c1}{\PYGZsh{}Finally use features to update the bayesian network to obtain final probabilities for importance}
\PYG{c+c1}{\PYGZsh{}Report a list of sorted probabilites for easy ranking}

\PYG{k+kn}{import} \PYG{n+nn}{matplotlib}
\PYG{k+kn}{import} \PYG{n+nn}{vcf}

\PYG{n}{matplotlib}\PYG{o}{.}\PYG{n}{use}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}Agg\PYGZsq{}}\PYG{p}{)}

\PYG{k+kn}{from} \PYG{n+nn}{pomegranate} \PYG{k+kn}{import} \PYG{o}{*}

\PYG{c+c1}{\PYGZsh{}main method for loading references into local variables}

\PYG{k}{def} \PYG{n+nf}{load\PYGZus{}reference}\PYG{p}{(}\PYG{n}{paths}\PYG{p}{):}
    \PYG{n}{paths} \PYG{o}{=} \PYG{n+nb}{vars}\PYG{p}{(}\PYG{n}{paths}\PYG{p}{)}
    \PYG{n+nb}{input} \PYG{o}{=} \PYG{n}{paths}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}input\PYGZsq{}}\PYG{p}{]}
    \PYG{n}{opened\PYGZus{}vcf\PYGZus{}file} \PYG{o}{=} \PYG{n}{vcf}\PYG{o}{.}\PYG{n}{Reader}\PYG{p}{(}\PYG{n+nb}{open}\PYG{p}{(}\PYG{n+nb}{input}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}r\PYGZsq{}}\PYG{p}{))}
    \PYG{n}{name3} \PYG{o}{=} \PYG{n+nb}{input} \PYG{o}{+} \PYG{l+s+s2}{\PYGZdq{}finalscores.txt\PYGZdq{}}
    \PYG{c+c1}{\PYGZsh{} orig\PYGZus{}stdout = sys.stdout}
    \PYG{c+c1}{\PYGZsh{} f = file(name3 + \PYGZsq{}.txt\PYGZsq{}, \PYGZsq{}w\PYGZsq{})}
    \PYG{c+c1}{\PYGZsh{} sys.stdout = f}
    \PYG{k}{return} \PYG{n}{opened\PYGZus{}vcf\PYGZus{}file}

\PYG{c+c1}{\PYGZsh{}method for getting functional annotation scores}

\PYG{k}{def} \PYG{n+nf}{get\PYGZus{}scores}\PYG{p}{(}\PYG{n}{record}\PYG{p}{):}
    \PYG{n}{list\PYGZus{}of\PYGZus{}important\PYGZus{}mutations} \PYG{o}{=} \PYG{p}{[}\PYG{n}{record}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}SIFT\PYGZus{}score\PYGZsq{}}\PYG{p}{],} \PYG{n}{record}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}LRT\PYGZus{}score\PYGZsq{}}\PYG{p}{],}
                                   \PYG{n}{record}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}MutationAssessor\PYGZus{}score\PYGZsq{}}\PYG{p}{],}
                                   \PYG{n}{record}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}Polyphen2\PYGZus{}HVAR\PYGZus{}score\PYGZsq{}}\PYG{p}{],} \PYG{n}{record}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}FATHMM\PYGZus{}score\PYGZsq{}}\PYG{p}{]]}
    \PYG{k}{if} \PYG{l+s+s1}{\PYGZsq{}NN\PYGZus{}prediction\PYGZsq{}} \PYG{o+ow}{in} \PYG{n}{record}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{:}
        \PYG{n}{NN\PYGZus{}prediction} \PYG{o}{=} \PYG{n}{record}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}NN\PYGZus{}prediction\PYGZsq{}}\PYG{p}{][}\PYG{l+m+mi}{0}\PYG{p}{]}
    \PYG{k}{else}\PYG{p}{:}
        \PYG{n}{NN\PYGZus{}prediction} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}
    \PYG{n}{list\PYGZus{}of\PYGZus{}important\PYGZus{}mutations} \PYG{o}{=} \PYG{n+nb}{map}\PYG{p}{(}\PYG{k}{lambda} \PYG{n}{x}\PYG{p}{:} \PYG{n}{x}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{],} \PYG{n}{list\PYGZus{}of\PYGZus{}important\PYGZus{}mutations}\PYG{p}{)}
    \PYG{n}{list\PYGZus{}of\PYGZus{}important\PYGZus{}mutations} \PYG{o}{=} \PYG{n+nb}{map}\PYG{p}{(}\PYG{k}{lambda} \PYG{n}{x}\PYG{p}{:} \PYG{n+nb+bp}{None} \PYG{k}{if} \PYG{n}{x} \PYG{o}{==} \PYG{n+nb+bp}{None} \PYG{k}{else} \PYG{n+nb}{float}\PYG{p}{(}\PYG{n}{x}\PYG{p}{),} \PYG{n}{list\PYGZus{}of\PYGZus{}important\PYGZus{}mutations}\PYG{p}{)}
    \PYG{k}{return} \PYG{n}{NN\PYGZus{}prediction}\PYG{p}{,} \PYG{n}{list\PYGZus{}of\PYGZus{}important\PYGZus{}mutations}

\PYG{c+c1}{\PYGZsh{}main method that controls I/O \PYGZhy{} it gets the input, applies the main function and then prepares the output}

\PYG{k}{def} \PYG{n+nf}{main}\PYG{p}{(}\PYG{n}{paths}\PYG{p}{):}
    \PYG{n}{vcf\PYGZus{}object} \PYG{o}{=} \PYG{n}{load\PYGZus{}reference}\PYG{p}{(}\PYG{n}{paths}\PYG{p}{)}
    \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores} \PYG{o}{=} \PYG{n}{analyse\PYGZus{}main}\PYG{p}{(}\PYG{n}{vcf\PYGZus{}object}\PYG{p}{)}
    \PYG{n}{prepare\PYGZus{}output}\PYG{p}{(}\PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{}this method controls the processes applied to the vcf file \PYGZhy{} for each record, it extract the list of scores,}
\PYG{c+c1}{\PYGZsh{} normalises it, compute probabilities, sorts it and then return output}

\PYG{k}{def} \PYG{n+nf}{analyse\PYGZus{}main}\PYG{p}{(}\PYG{n}{vcf\PYGZus{}object}\PYG{p}{):}
    \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores} \PYG{o}{=} \PYG{n}{extract\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{(}\PYG{n}{vcf\PYGZus{}object}\PYG{p}{)}
    \PYG{n}{apply\PYGZus{}feature\PYGZus{}wise\PYGZus{}normalisation}\PYG{p}{(}\PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{)}
    \PYG{n}{compute\PYGZus{}network\PYGZus{}and\PYGZus{}probabilities}\PYG{p}{(}\PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{)}
    \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{o}{.}\PYG{n}{sort}\PYG{p}{(}\PYG{n}{key}\PYG{o}{=}\PYG{k}{lambda} \PYG{n}{x}\PYG{p}{:} \PYG{n}{x}\PYG{p}{[}\PYG{l+m+mi}{4}\PYG{p}{],} \PYG{n}{reverse}\PYG{o}{=}\PYG{n+nb+bp}{True}\PYG{p}{)}
    \PYG{k}{return} \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}

\PYG{c+c1}{\PYGZsh{} since print is redirected to stdoutput, print function is used to store output}

\PYG{k}{def} \PYG{n+nf}{prepare\PYGZus{}output}\PYG{p}{(}\PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{):}
    \PYG{k}{for} \PYG{n}{item} \PYG{o+ow}{in} \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{:}
        \PYG{k}{print} \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{],} \PYG{n}{item}\PYG{p}{,} \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}Gene.refGene\PYGZsq{}}\PYG{p}{]}

\PYG{c+c1}{\PYGZsh{} wrapper function used to create bayesian network for all records}

\PYG{k}{def} \PYG{n+nf}{compute\PYGZus{}network\PYGZus{}and\PYGZus{}probabilities}\PYG{p}{(}\PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{):}
    \PYG{k}{for} \PYG{n}{record} \PYG{o+ow}{in} \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{:}
        \PYG{n}{network} \PYG{o}{=} \PYG{n}{create\PYGZus{}network\PYGZus{}and\PYGZus{}compute\PYGZus{}probabilities}\PYG{p}{(}\PYG{n}{record}\PYG{p}{)}
        \PYG{n}{compute\PYGZus{}record}\PYG{p}{(}\PYG{n}{network}\PYG{p}{,} \PYG{n}{record}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} this function applies a featurewise normalisation of all features to a range of 0\PYGZhy{}1, and flip scores}
\PYG{c+c1}{\PYGZsh{} for certain features}

\PYG{k}{def} \PYG{n+nf}{apply\PYGZus{}feature\PYGZus{}wise\PYGZus{}normalisation}\PYG{p}{(}\PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{):}
    \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{6}\PYG{p}{):}
        \PYG{n}{min\PYGZus{}num} \PYG{o}{=} \PYG{l+m+mi}{1000000}
        \PYG{n}{max\PYGZus{}num} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1000000}
        \PYG{k}{for} \PYG{n}{item} \PYG{o+ow}{in} \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{:}
            \PYG{k}{if} \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]} \PYG{o}{!=} \PYG{n+nb+bp}{None}\PYG{p}{:}
                \PYG{n}{min\PYGZus{}num} \PYG{o}{=} \PYG{n+nb}{min}\PYG{p}{(}\PYG{n}{min\PYGZus{}num}\PYG{p}{,} \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{])}
                \PYG{n}{max\PYGZus{}num} \PYG{o}{=} \PYG{n+nb}{max}\PYG{p}{(}\PYG{n}{max\PYGZus{}num}\PYG{p}{,} \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{])}
        \PYG{k}{for} \PYG{n}{item} \PYG{o+ow}{in} \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{:}
            \PYG{k}{if} \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]} \PYG{o}{!=} \PYG{n+nb+bp}{None}\PYG{p}{:}
                \PYG{n}{value} \PYG{o}{=} \PYG{p}{((}\PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]} \PYG{o}{\PYGZhy{}} \PYG{n}{min\PYGZus{}num}\PYG{p}{)} \PYG{o}{/} \PYG{p}{(}\PYG{n}{max\PYGZus{}num} \PYG{o}{\PYGZhy{}} \PYG{n}{min\PYGZus{}num}\PYG{p}{)} \PYG{o}{+} \PYG{l+m+mf}{0.2}\PYG{p}{)} \PYG{o}{/} \PYG{l+m+mf}{1.3}
                \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{value}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{l+m+mf}{0.5}
        \PYG{k}{if} \PYG{n}{i} \PYG{o}{==} \PYG{l+m+mi}{0} \PYG{o+ow}{or} \PYG{n}{i} \PYG{o}{==} \PYG{l+m+mi}{5}\PYG{p}{:}
            \PYG{k}{for} \PYG{n}{item} \PYG{o+ow}{in} \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{:}
                \PYG{k}{if} \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]} \PYG{o}{!=} \PYG{n+nb+bp}{None}\PYG{p}{:}
                    \PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{n}{item}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{][}\PYG{n}{i}\PYG{p}{]}

\PYG{c+c1}{\PYGZsh{} extract list of of scores from each record, including all functional annotations, clinvar scores and dbsnp}

\PYG{k}{def} \PYG{n+nf}{extract\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{p}{(}\PYG{n}{vcf\PYGZus{}object}\PYG{p}{):}
    \PYG{n}{count} \PYG{o}{=} \PYG{l+m+mi}{0}
    \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores} \PYG{o}{=} \PYG{p}{[]}
    \PYG{k}{for} \PYG{n}{record} \PYG{o+ow}{in} \PYG{n}{vcf\PYGZus{}object}\PYG{p}{:}
        \PYG{n}{count} \PYG{o}{+=} \PYG{l+m+mi}{1}
        \PYG{n}{nn\PYGZus{}prediction}\PYG{p}{,} \PYG{n}{list\PYGZus{}of\PYGZus{}scores} \PYG{o}{=} \PYG{n}{get\PYGZus{}scores}\PYG{p}{(}\PYG{n}{record}\PYG{p}{)}
        \PYG{k}{if} \PYG{o+ow}{not} \PYG{n+nb}{list}\PYG{p}{(}\PYG{n+nb}{filter}\PYG{p}{(}\PYG{k}{lambda} \PYG{n}{x}\PYG{p}{:} \PYG{n}{x} \PYG{o}{!=} \PYG{n+nb+bp}{None}\PYG{p}{,} \PYG{n}{list\PYGZus{}of\PYGZus{}scores}\PYG{p}{)):}
            \PYG{k}{continue}
        \PYG{n}{get\PYGZus{}clinvar\PYGZus{}scores}\PYG{p}{(}\PYG{n}{list\PYGZus{}of\PYGZus{}scores}\PYG{p}{,} \PYG{n}{record}\PYG{p}{)}
        \PYG{n}{snp\PYGZus{}present} \PYG{o}{=} \PYG{n}{get\PYGZus{}db\PYGZus{}snp\PYGZus{}scores}\PYG{p}{(}\PYG{n}{record}\PYG{p}{)}
        \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}\PYG{o}{.}\PYG{n}{append}\PYG{p}{([}\PYG{n+nb}{float}\PYG{p}{(}\PYG{n}{nn\PYGZus{}prediction}\PYG{p}{),} \PYG{n}{list\PYGZus{}of\PYGZus{}scores}\PYG{p}{,} \PYG{n}{record}\PYG{p}{,} \PYG{n}{snp\PYGZus{}present}\PYG{p}{])}
    \PYG{k}{return} \PYG{n}{full\PYGZus{}list\PYGZus{}of\PYGZus{}scores}

\PYG{c+c1}{\PYGZsh{} Compute the Bayesian Network by assuming observations and attaching mapped probabilities (0,1) to P(X=True | Y=True)}

\PYG{k}{def} \PYG{n+nf}{compute\PYGZus{}record}\PYG{p}{(}\PYG{n}{network}\PYG{p}{,} \PYG{n}{record}\PYG{p}{):}
    \PYG{n}{beliefs} \PYG{o}{=} \PYG{n}{network}\PYG{o}{.}\PYG{n}{predict\PYGZus{}proba}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}Real Gene\PYGZsq{}}\PYG{p}{:} \PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}ClinVar\PYGZsq{}}\PYG{p}{:} \PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}PolyPhen\PYGZsq{}}\PYG{p}{:} \PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}LRT\PYGZsq{}}\PYG{p}{:} \PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{,}
                                     \PYG{l+s+s1}{\PYGZsq{}MutationAssessor\PYGZsq{}}\PYG{p}{:} \PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}SIFT\PYGZsq{}}\PYG{p}{:} \PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{,}
                                     \PYG{l+s+s1}{\PYGZsq{}FATHMM\PYGZus{}gene\PYGZsq{}}\PYG{p}{:} \PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}rs\PYGZus{}gene\PYGZsq{}}\PYG{p}{:} \PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{\PYGZcb{})}
    \PYG{c+c1}{\PYGZsh{} print \PYGZdq{}\PYGZbs{}n\PYGZdq{}.join(\PYGZdq{}\PYGZob{}\PYGZcb{}\PYGZbs{}t\PYGZob{}\PYGZcb{}\PYGZdq{}.format(state.name, belief) for state, belief in zip(network.states, beliefs))}
    \PYG{c+c1}{\PYGZsh{} get the probability that the gene is important}
    \PYG{n}{prob\PYGZus{}gene\PYGZus{}important} \PYG{o}{=} \PYG{n}{beliefs}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]}\PYG{o}{.}\PYG{n}{values}\PYG{p}{()[}\PYG{l+m+mi}{1}\PYG{p}{]}
    \PYG{n}{beliefs} \PYG{o}{=} \PYG{n+nb}{map}\PYG{p}{(}\PYG{n+nb}{str}\PYG{p}{,} \PYG{n}{beliefs}\PYG{p}{)}
    \PYG{n}{record}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{prob\PYGZus{}gene\PYGZus{}important}\PYG{p}{)}
    \PYG{n}{record}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{record}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}snp138\PYGZsq{}}\PYG{p}{])}
    \PYG{n}{record}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{record}\PYG{p}{[}\PYG{l+m+mi}{3}\PYG{p}{])}

\PYG{c+c1}{\PYGZsh{} If snp is present in db\PYGZhy{}snp, attach probability of importance to 0.3, else 0.7}

\PYG{k}{def} \PYG{n+nf}{get\PYGZus{}db\PYGZus{}snp\PYGZus{}scores}\PYG{p}{(}\PYG{n}{record}\PYG{p}{):}
    \PYG{n}{snp\PYGZus{}present} \PYG{o}{=} \PYG{l+m+mf}{0.7}
    \PYG{k}{if} \PYG{n}{record}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}snp138\PYGZsq{}}\PYG{p}{][}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{!=} \PYG{n+nb+bp}{None}\PYG{p}{:}
        \PYG{n}{snp\PYGZus{}present} \PYG{o}{=} \PYG{l+m+mf}{0.3}
    \PYG{k}{return} \PYG{n}{snp\PYGZus{}present}

\PYG{c+c1}{\PYGZsh{} If snp is present in clinvar, attach probability of importance to 0.7, else 0.3}

\PYG{k}{def} \PYG{n+nf}{get\PYGZus{}clinvar\PYGZus{}scores}\PYG{p}{(}\PYG{n}{list\PYGZus{}of\PYGZus{}scores}\PYG{p}{,} \PYG{n}{record}\PYG{p}{):}
    \PYG{k}{if} \PYG{n}{record}\PYG{o}{.}\PYG{n}{INFO}\PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}clinvar\PYGZus{}20150629\PYGZsq{}}\PYG{p}{][}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{!=} \PYG{n+nb+bp}{None}\PYG{p}{:}
        \PYG{n}{list\PYGZus{}of\PYGZus{}scores}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+m+mf}{0.7}\PYG{p}{)}
    \PYG{k}{else}\PYG{p}{:}
        \PYG{n}{list\PYGZus{}of\PYGZus{}scores}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+m+mf}{0.3}\PYG{p}{)}

\PYG{c+c1}{\PYGZsh{} wrapper method to create the bayesian network and compute probabilities}

\PYG{k}{def} \PYG{n+nf}{create\PYGZus{}network\PYGZus{}and\PYGZus{}compute\PYGZus{}probabilities}\PYG{p}{(}\PYG{n}{record}\PYG{p}{):}
    \PYG{n}{ClinVar\PYGZus{}gene}\PYG{p}{,} \PYG{n}{FATHMM\PYGZus{}gene}\PYG{p}{,} \PYG{n}{LRT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{MutationAssessor\PYGZus{}gene}\PYG{p}{,} \PYG{n}{MutationTaster\PYGZus{}gene}\PYG{p}{,} \PYG{n}{PolyPhen2\PYGZus{}gene}\PYG{p}{,} \PYG{n}{SIFT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{functional\PYGZus{}gene}\PYG{p}{,} \PYG{n}{importgene}\PYG{p}{,} \PYG{n}{real\PYGZus{}gene}\PYG{p}{,} \PYG{n}{rs\PYGZus{}gene} \PYG{o}{=} \PYG{n}{initialise\PYGZus{}distributions}\PYG{p}{(}
        \PYG{n}{record}\PYG{p}{)}
    \PYG{c+c1}{\PYGZsh{} set up states}
    \PYG{n}{s1}\PYG{p}{,} \PYG{n}{s10}\PYG{p}{,} \PYG{n}{s11}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{,} \PYG{n}{s3}\PYG{p}{,} \PYG{n}{s4}\PYG{p}{,} \PYG{n}{s5}\PYG{p}{,} \PYG{n}{s6}\PYG{p}{,} \PYG{n}{s7}\PYG{p}{,} \PYG{n}{s8}\PYG{p}{,} \PYG{n}{s9} \PYG{o}{=} \PYG{n}{generate\PYGZus{}states}\PYG{p}{(}\PYG{n}{ClinVar\PYGZus{}gene}\PYG{p}{,} \PYG{n}{FATHMM\PYGZus{}gene}\PYG{p}{,} \PYG{n}{LRT\PYGZus{}gene}\PYG{p}{,}
                                                                   \PYG{n}{MutationAssessor\PYGZus{}gene}\PYG{p}{,} \PYG{n}{MutationTaster\PYGZus{}gene}\PYG{p}{,}
                                                                   \PYG{n}{PolyPhen2\PYGZus{}gene}\PYG{p}{,} \PYG{n}{SIFT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{functional\PYGZus{}gene}\PYG{p}{,}
                                                                   \PYG{n}{importgene}\PYG{p}{,} \PYG{n}{real\PYGZus{}gene}\PYG{p}{,} \PYG{n}{rs\PYGZus{}gene}\PYG{p}{)}
    \PYG{c+c1}{\PYGZsh{} set up network}
    \PYG{n}{network} \PYG{o}{=} \PYG{n}{add\PYGZus{}edges\PYGZus{}bake\PYGZus{}network}\PYG{p}{(}\PYG{n}{s1}\PYG{p}{,} \PYG{n}{s10}\PYG{p}{,} \PYG{n}{s11}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{,} \PYG{n}{s3}\PYG{p}{,} \PYG{n}{s4}\PYG{p}{,} \PYG{n}{s5}\PYG{p}{,} \PYG{n}{s6}\PYG{p}{,} \PYG{n}{s7}\PYG{p}{,} \PYG{n}{s8}\PYG{p}{,} \PYG{n}{s9}\PYG{p}{)}
    \PYG{k}{return} \PYG{n}{network}

\PYG{c+c1}{\PYGZsh{}  method to create the edges in the network}

\PYG{k}{def} \PYG{n+nf}{add\PYGZus{}edges\PYGZus{}bake\PYGZus{}network}\PYG{p}{(}\PYG{n}{s1}\PYG{p}{,} \PYG{n}{s10}\PYG{p}{,} \PYG{n}{s11}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{,} \PYG{n}{s3}\PYG{p}{,} \PYG{n}{s4}\PYG{p}{,} \PYG{n}{s5}\PYG{p}{,} \PYG{n}{s6}\PYG{p}{,} \PYG{n}{s7}\PYG{p}{,} \PYG{n}{s8}\PYG{p}{,} \PYG{n}{s9}\PYG{p}{):}
    \PYG{n}{network} \PYG{o}{=} \PYG{n}{BayesianNetwork}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}Gene Prediction\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}states}\PYG{p}{(}\PYG{n}{s1}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{,} \PYG{n}{s3}\PYG{p}{,} \PYG{n}{s4}\PYG{p}{,} \PYG{n}{s5}\PYG{p}{,} \PYG{n}{s6}\PYG{p}{,} \PYG{n}{s8}\PYG{p}{,} \PYG{n}{s9}\PYG{p}{,} \PYG{n}{s10}\PYG{p}{,} \PYG{n}{s11}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s1}\PYG{p}{,} \PYG{n}{s3}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s2}\PYG{p}{,} \PYG{n}{s3}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s4}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s5}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s6}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s7}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s8}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s9}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s10}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{s11}\PYG{p}{,} \PYG{n}{s3}\PYG{p}{)}
    \PYG{n}{network}\PYG{o}{.}\PYG{n}{bake}\PYG{p}{()}
    \PYG{k}{return} \PYG{n}{network}

\PYG{c+c1}{\PYGZsh{} method that generates the nodes in the bayesian network}

\PYG{k}{def} \PYG{n+nf}{generate\PYGZus{}states}\PYG{p}{(}\PYG{n}{ClinVar\PYGZus{}gene}\PYG{p}{,} \PYG{n}{FATHMM\PYGZus{}gene}\PYG{p}{,} \PYG{n}{LRT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{MutationAssessor\PYGZus{}gene}\PYG{p}{,} \PYG{n}{MutationTaster\PYGZus{}gene}\PYG{p}{,} \PYG{n}{PolyPhen2\PYGZus{}gene}\PYG{p}{,}
                    \PYG{n}{SIFT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{functional\PYGZus{}gene}\PYG{p}{,} \PYG{n}{importgene}\PYG{p}{,} \PYG{n}{real\PYGZus{}gene}\PYG{p}{,} \PYG{n}{rs\PYGZus{}gene}\PYG{p}{):}
    \PYG{n}{s1} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{real\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Real Gene\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s2} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{functional\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Functional Gene\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s3} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{importgene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Important Gene\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s4} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{ClinVar\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}ClinVar\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s5} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{PolyPhen2\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}PolyPhen\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s6} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{LRT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}LRT\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s7} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{MutationTaster\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}MutationTaster\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s8} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{MutationAssessor\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}MutationAssessor\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s9} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{SIFT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}SIFT\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s10} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{FATHMM\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}FATHMM\PYGZus{}gene\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{s11} \PYG{o}{=} \PYG{n}{State}\PYG{p}{(}\PYG{n}{rs\PYGZus{}gene}\PYG{p}{,} \PYG{n}{name}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}rs\PYGZus{}gene\PYGZdq{}}\PYG{p}{)}
    \PYG{k}{return} \PYG{n}{s1}\PYG{p}{,} \PYG{n}{s10}\PYG{p}{,} \PYG{n}{s11}\PYG{p}{,} \PYG{n}{s2}\PYG{p}{,} \PYG{n}{s3}\PYG{p}{,} \PYG{n}{s4}\PYG{p}{,} \PYG{n}{s5}\PYG{p}{,} \PYG{n}{s6}\PYG{p}{,} \PYG{n}{s7}\PYG{p}{,} \PYG{n}{s8}\PYG{p}{,} \PYG{n}{s9}

\PYG{c+c1}{\PYGZsh{}methods to initialise prior distributions in bayesian network}

\PYG{k}{def} \PYG{n+nf}{initialise\PYGZus{}distributions}\PYG{p}{(}\PYG{n}{record}\PYG{p}{):}
    \PYG{n}{ClinVar\PYGZus{}gene} \PYG{o}{=} \PYG{n}{DiscreteDistribution}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{\PYGZcb{})}
    \PYG{n}{PolyPhen2\PYGZus{}gene} \PYG{o}{=} \PYG{n}{DiscreteDistribution}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{\PYGZcb{})}
    \PYG{n}{LRT\PYGZus{}gene} \PYG{o}{=} \PYG{n}{DiscreteDistribution}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{\PYGZcb{})}
    \PYG{n}{MutationTaster\PYGZus{}gene} \PYG{o}{=} \PYG{n}{DiscreteDistribution}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{\PYGZcb{})}
    \PYG{n}{MutationAssessor\PYGZus{}gene} \PYG{o}{=} \PYG{n}{DiscreteDistribution}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{\PYGZcb{})}
    \PYG{n}{SIFT\PYGZus{}gene} \PYG{o}{=} \PYG{n}{DiscreteDistribution}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{\PYGZcb{})}
    \PYG{n}{FATHMM\PYGZus{}gene} \PYG{o}{=} \PYG{n}{DiscreteDistribution}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{\PYGZcb{})}
    \PYG{n}{rs\PYGZus{}gene} \PYG{o}{=} \PYG{n}{DiscreteDistribution}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{\PYGZcb{})}
    \PYG{n}{import\PYGZus{}cdp} \PYG{o}{=} \PYG{n}{get\PYGZus{}cdp}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{,} \PYG{p}{[(}\PYG{n}{record}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{+} \PYG{l+m+mf}{0.2}\PYG{p}{)} \PYG{o}{/} \PYG{l+m+mf}{1.3}\PYG{p}{,} \PYG{n}{record}\PYG{p}{[}\PYG{l+m+mi}{3}\PYG{p}{],} \PYG{l+m+mf}{0.8}\PYG{p}{])}
    \PYG{n}{functional\PYGZus{}cdp} \PYG{o}{=} \PYG{n}{get\PYGZus{}cdp}\PYG{p}{(}\PYG{l+m+mi}{6}\PYG{p}{,} \PYG{n}{record}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])}
    \PYG{n}{functional\PYGZus{}gene} \PYG{o}{=} \PYG{n}{ConditionalProbabilityTable}\PYG{p}{(}\PYG{n}{functional\PYGZus{}cdp}\PYG{p}{,} \PYG{p}{[}\PYG{n}{ClinVar\PYGZus{}gene}\PYG{p}{,} \PYG{n}{PolyPhen2\PYGZus{}gene}\PYG{p}{,} \PYG{n}{LRT\PYGZus{}gene}\PYG{p}{,}
                                                                   \PYG{n}{MutationAssessor\PYGZus{}gene}\PYG{p}{,}
                                                                   \PYG{n}{SIFT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{FATHMM\PYGZus{}gene}\PYG{p}{])}
    \PYG{n}{real\PYGZus{}gene} \PYG{o}{=} \PYG{n}{DiscreteDistribution}\PYG{p}{(\PYGZob{}}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{:} \PYG{l+m+mf}{0.5}\PYG{p}{\PYGZcb{})}
    \PYG{n}{importgene} \PYG{o}{=} \PYG{n}{ConditionalProbabilityTable}\PYG{p}{(}\PYG{n}{import\PYGZus{}cdp}\PYG{p}{,} \PYG{p}{[}\PYG{n}{real\PYGZus{}gene}\PYG{p}{,} \PYG{n}{rs\PYGZus{}gene}\PYG{p}{,} \PYG{n}{functional\PYGZus{}gene}\PYG{p}{])}
    \PYG{k}{return} \PYG{n}{ClinVar\PYGZus{}gene}\PYG{p}{,} \PYG{n}{FATHMM\PYGZus{}gene}\PYG{p}{,} \PYG{n}{LRT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{MutationAssessor\PYGZus{}gene}\PYG{p}{,} \PYG{n}{MutationTaster\PYGZus{}gene}\PYG{p}{,} \PYG{n}{PolyPhen2\PYGZus{}gene}\PYG{p}{,} \PYG{n}{SIFT\PYGZus{}gene}\PYG{p}{,} \PYG{n}{functional\PYGZus{}gene}\PYG{p}{,} \PYG{n}{importgene}\PYG{p}{,} \PYG{n}{real\PYGZus{}gene}\PYG{p}{,} \PYG{n}{rs\PYGZus{}gene}


\PYG{c+c1}{\PYGZsh{} method that builds the cdp table. n is the number of input variables, probability list gives the probability}
\PYG{c+c1}{\PYGZsh{} that the i\PYGZhy{}th X variable is true P(Xi=True).}

\PYG{k}{def} \PYG{n+nf}{get\PYGZus{}cdp}\PYG{p}{(}\PYG{n}{n}\PYG{p}{,} \PYG{n}{prob\PYGZus{}list}\PYG{p}{):}
    \PYG{n}{temp\PYGZus{}list} \PYG{o}{=} \PYG{n}{create\PYGZus{}true\PYGZus{}false\PYGZus{}matrix}\PYG{p}{(}\PYG{n}{n}\PYG{p}{)}
    \PYG{n}{calculate\PYGZus{}probabilities}\PYG{p}{(}\PYG{n}{n}\PYG{p}{,} \PYG{n}{prob\PYGZus{}list}\PYG{p}{,} \PYG{n}{temp\PYGZus{}list}\PYG{p}{)}
    \PYG{k}{return} \PYG{n}{temp\PYGZus{}list}


\PYG{c+c1}{\PYGZsh{} Generates a True False matrix using binary counting logic, critical for input in bayesian network}

\PYG{k}{def} \PYG{n+nf}{create\PYGZus{}true\PYGZus{}false\PYGZus{}matrix}\PYG{p}{(}\PYG{n}{n}\PYG{p}{):}
    \PYG{n}{temp\PYGZus{}list} \PYG{o}{=} \PYG{p}{[]}
    \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{2} \PYG{o}{**} \PYG{n}{n}\PYG{p}{):}
        \PYG{n}{temp\PYGZus{}row} \PYG{o}{=} \PYG{p}{[]}
        \PYG{k}{for} \PYG{n}{j} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{n}\PYG{p}{):}
            \PYG{n}{number\PYGZus{}2} \PYG{o}{=} \PYG{n}{i} \PYG{o}{//} \PYG{p}{(}\PYG{l+m+mi}{2} \PYG{o}{**} \PYG{p}{(}\PYG{n}{n} \PYG{o}{\PYGZhy{}} \PYG{n}{j} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{))}
            \PYG{n}{number\PYGZus{}1} \PYG{o}{=} \PYG{n}{number\PYGZus{}2} \PYG{o}{\PYGZpc{}} \PYG{l+m+mi}{2}
            \PYG{k}{if} \PYG{n}{number\PYGZus{}1} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{:}
                \PYG{n}{temp\PYGZus{}row}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{)}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{n}{temp\PYGZus{}row}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{)}
        \PYG{n}{temp\PYGZus{}list}\PYG{o}{.}\PYG{n}{insert}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{temp\PYGZus{}row} \PYG{o}{+} \PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}False\PYGZsq{}}\PYG{p}{])}
        \PYG{n}{temp\PYGZus{}list}\PYG{o}{.}\PYG{n}{insert}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{temp\PYGZus{}row} \PYG{o}{+} \PYG{p}{[}\PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{])}
    \PYG{k}{return} \PYG{n}{temp\PYGZus{}list}


\PYG{c+c1}{\PYGZsh{} calculates the probabilities, taking in the true list as well as a list of probabilities. The key here is}
\PYG{c+c1}{\PYGZsh{} the probability that the mutation is true is related to the scores given by mutation taster etc..}
\PYG{c+c1}{\PYGZsh{} ie P(X is impt | X is Clinvar) = P(X is Clinvar)}

\PYG{k}{def} \PYG{n+nf}{calculate\PYGZus{}probabilities}\PYG{p}{(}\PYG{n}{n}\PYG{p}{,} \PYG{n}{prob\PYGZus{}list}\PYG{p}{,} \PYG{n}{temp\PYGZus{}list}\PYG{p}{):}
    \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{2} \PYG{o}{**} \PYG{p}{(}\PYG{n}{n} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{),} \PYG{l+m+mi}{2}\PYG{p}{):}
        \PYG{n}{true\PYGZus{}row} \PYG{o}{=} \PYG{n}{temp\PYGZus{}list}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}
        \PYG{n}{true\PYGZus{}probability} \PYG{o}{=} \PYG{l+m+mi}{1}
        \PYG{n}{false\PYGZus{}probability} \PYG{o}{=} \PYG{l+m+mi}{1}
        \PYG{k}{for} \PYG{n}{k} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{n}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{):}
            \PYG{k}{if} \PYG{n}{true\PYGZus{}row}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]} \PYG{o}{==} \PYG{l+s+s1}{\PYGZsq{}True\PYGZsq{}}\PYG{p}{:}
                \PYG{n}{true\PYGZus{}probability} \PYG{o}{*=} \PYG{n}{prob\PYGZus{}list}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]}
                \PYG{n}{false\PYGZus{}probability} \PYG{o}{*=} \PYG{l+m+mi}{1} \PYG{o}{\PYGZhy{}} \PYG{n}{prob\PYGZus{}list}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]}  \PYG{c+c1}{\PYGZsh{} probability that mutation is false is 1 minus mutation is true}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{n}{true\PYGZus{}probability} \PYG{o}{*=} \PYG{l+m+mi}{1} \PYG{o}{\PYGZhy{}} \PYG{n}{prob\PYGZus{}list}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]}
                \PYG{n}{false\PYGZus{}probability} \PYG{o}{*=} \PYG{n}{prob\PYGZus{}list}\PYG{p}{[}\PYG{n}{k}\PYG{p}{]}
        \PYG{n}{final\PYGZus{}true\PYGZus{}probability} \PYG{o}{=} \PYG{n}{true\PYGZus{}probability} \PYG{o}{/} \PYG{p}{(}\PYG{n}{true\PYGZus{}probability} \PYG{o}{+} \PYG{n}{false\PYGZus{}probability}\PYG{p}{)}
        \PYG{n}{final\PYGZus{}false\PYGZus{}probability} \PYG{o}{=} \PYG{n}{false\PYGZus{}probability} \PYG{o}{/} \PYG{p}{(}\PYG{n}{true\PYGZus{}probability} \PYG{o}{+} \PYG{n}{false\PYGZus{}probability}\PYG{p}{)}
        \PYG{n}{temp\PYGZus{}list}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{final\PYGZus{}true\PYGZus{}probability}\PYG{p}{)}
        \PYG{n}{temp\PYGZus{}list}\PYG{p}{[}\PYG{n}{i} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{]}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{final\PYGZus{}false\PYGZus{}probability}\PYG{p}{)}

\PYG{k}{if} \PYG{n}{\PYGZus{}\PYGZus{}name\PYGZus{}\PYGZus{}} \PYG{o}{==} \PYG{l+s+s2}{\PYGZdq{}\PYGZus{}\PYGZus{}main\PYGZus{}\PYGZus{}\PYGZdq{}}\PYG{p}{:}
    \PYG{n}{parser} \PYG{o}{=} \PYG{n}{argparse}\PYG{o}{.}\PYG{n}{ArgumentParser}\PYG{p}{(}\PYG{n}{description}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}train neural net\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{parser}\PYG{o}{.}\PYG{n}{add\PYGZus{}argument}\PYG{p}{(}\PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}i\PYGZsq{}}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}\PYGZhy{}\PYGZhy{}input\PYGZsq{}}\PYG{p}{,} \PYG{n}{help}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}give directories with files\PYGZdq{}}\PYG{p}{)}
    \PYG{n}{paths} \PYG{o}{=} \PYG{n}{parser}\PYG{o}{.}\PYG{n}{parse\PYGZus{}args}\PYG{p}{()}
    \PYG{n}{main}\PYG{p}{(}\PYG{n}{paths}\PYG{p}{)}
\end{Verbatim}
